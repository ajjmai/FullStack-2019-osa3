{"version":3,"sources":["components/Person.js","services/persons.js","App.js","index.js"],"names":["Person","_ref","person","deleteName","react_default","a","createElement","name","number","onClick","id","baseUrl","services_persons","axios","get","then","response","data","newObject","post","put","concat","delete","PersonForm","props","onSubmit","addName","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","handleFilter","Persons","_ref2","persons","map","components_Person","key","Notification","_ref3","message","className","ErrorMessage","_ref4","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","filterRule","setFilterRule","_useState9","_useState10","notificationMessage","setNotificationMessage","_useState11","_useState12","errorMessage","setErrorMessage","useEffect","personService","initialData","personsToShow","filter","p","toLowerCase","includes","App_Notification","App_ErrorMessage","App_Filter","event","target","App_PersonForm","preventDefault","nameObject","window","confirm","find","n","changedNumber","objectSpread","returnedName","setTimeout","catch","error","App_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1c41a7f0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Person = ({ person, deleteName }) => {\n  return (\n    <div>\n      {person.name} {person.number}{\" \"}\n      <button onClick={() => deleteName(person.id)}>poista</button>\n    </div>\n  );\n};\n\nexport default Person;\n","import axios from \"axios\";\n//const baseUrl = \"http://localhost:3001/api/persons\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst deleteEntry = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  deleteEntry\n};\n","import React, { useState, useEffect } from \"react\";\nimport Person from \"./components/Person\";\nimport personService from \"./services/persons\";\nimport \"./index.css\";\n\nconst PersonForm = props => {\n  return (\n    <form onSubmit={props.addName}>\n      <div>\n        nimi: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        numero:{\" \"}\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">lisää</button>\n      </div>\n    </form>\n  );\n};\n\nconst Filter = ({ handleFilter }) => {\n  return (\n    <div>\n      rajaa näytettäviä <input onChange={handleFilter} />\n    </div>\n  );\n};\n\nconst Persons = ({ persons, deleteName }) => {\n  return (\n    <div>\n      {persons.map(person => (\n        <Person key={person.id} person={person} deleteName={deleteName} />\n      ))}\n    </div>\n  );\n};\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"notification message\">{message}</div>;\n};\n\nconst ErrorMessage = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error message\">{message}</div>;\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterRule, setFilterRule] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then(initialData => {\n      setPersons(initialData);\n    });\n  }, []);\n\n  const personsToShow =\n    filterRule === \"\"\n      ? persons\n      : persons.filter(p => p.name.toLowerCase().includes(filterRule));\n\n  // ADD  new person\n  const addName = event => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    };\n\n    // if person already exists, change number\n    if (persons.map(person => person.name).includes(newName)) {\n      if (\n        window.confirm(\n          `${newName} on jo luettelossa, korvataanko vanha numero uudella?`\n        )\n      ) {\n        const person = persons.find(n => n.name === newName);\n        const changedNumber = { ...person, number: newNumber };\n\n        personService\n          .update(person.id, changedNumber)\n          .then(returnedName => {\n            setPersons(\n              persons.map(p => (p.id !== person.id ? p : returnedName))\n            );\n            setNotificationMessage(`Muutettiin numero: ${person.name}`);\n            setTimeout(() => {\n              setNotificationMessage(null);\n            }, 5000);\n          })\n          .catch(error => {\n            setErrorMessage(\n              `Henkilö ${person.name} oli jo poistettu palvelimelta.`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n            setPersons(persons.filter(p => p.name !== newName));\n          });\n      }\n    } else {\n      personService\n        .create(nameObject)\n        .then(newName => {\n          setPersons(persons.concat(newName));\n          setNotificationMessage(`Lisättiin ${newName.name}`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        })\n        .catch(error => {\n          //console.log(error.response.data);\n          setErrorMessage(`${error.response.data.error}`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  // DELETE person\n  const deleteName = id => {\n    const person = persons.find(n => n.id === id);\n    if (window.confirm(`Poistetaanko ${person.name}?`)) {\n      personService.deleteEntry(id).then(response => {\n        setPersons(persons.filter(n => n.id !== id));\n        setNotificationMessage(`Poistettiin ${person.name}`);\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilter = event => {\n    if (event.target.value !== \"\") {\n      setFilterRule(event.target.value);\n    } else {\n      setFilterRule(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Puhelinluettelo</h1>\n      <Notification message={notificationMessage} />\n      <ErrorMessage message={errorMessage} />\n      <Filter handleFilter={handleFilter} />\n      <h2>lisää uusi</h2>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numerot</h2>\n      <Persons persons={personsToShow} deleteName={deleteName} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}